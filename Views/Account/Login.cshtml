@model SampleDotnetApp.Models.ViewModels.LoginViewModel
@{
    ViewData["Title"] = "Login";
}
<h2 class="text-center mt-4">@ViewData["Title"]</h2>
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <form asp-action="Login" method="post" id="loginForm" class="p-4 bg-white text-dark">
                <div class="form-group mb-3">
                    <label id="emailLabel" asp-for="Email" class="form-label text-dark">Email</label>
                    <input id="emailInput" asp-for="Email" class="form-control text-dark bg-white" placeholder="Enter your email" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label id="passwordLabel" asp-for="Password" class="form-label text-dark">Password</label>
                    <input id="passwordInput" asp-for="Password" class="form-control text-dark bg-white" type="password" placeholder="Enter your password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <input type="hidden" name="HashedPassword" id="HashedPassword" />
                <button type="submit" class="btn btn-primary w-100">Login</button>
                <div class="text-center mt-3">
                    <a asp-controller="Account" asp-action="GoogleLogin" class="btn btn-google w-100 mb-2">Sign in with Google</a>
                </div>            
            </form>
            <div class="text-center mt-3">
                <a asp-controller="Account" asp-action="Register" class="btn btn-secondary w-100">Register</a>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="alertModal" tabindex="-1" aria-labelledby="alertModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content">
            <div class="modal-header" id="modalHeader">
                <h5 class="modal-title" id="alertModalLabel">Alert!</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center" id="modalBody">
                @TempData["AlertMessage"]
            </div>
            <div class="modal-footer d-flex justify-content-center align-items-center" id="modalFooter">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>
    <script>
        const loginDiv = document.getElementById('loginForm');
        const emailLabel = document.getElementById('emailLabel');
        const emailInput = document.getElementById('emailInput');
        const passwordLabel = document.getElementById('passwordLabel');
        const passwordInput = document.getElementById('passwordInput');
        const savedThemeLoginComponent = localStorage.getItem('theme') || 'theme-light';

        if (savedThemeLoginComponent === 'theme-dark') {
            loginDiv.classList.remove('bg-white', 'text-dark');
            loginDiv.classList.add('bg-dark', 'text-light');
            emailLabel.classList.remove('text-dark');
            emailLabel.classList.add('text-light');
            emailInput.classList.remove('text-dark', 'bg-white');
            emailInput.classList.add('text-light', 'bg-dark');
            emailInput.classList.add('dark-theme');
            passwordLabel.classList.remove('text-dark');
            passwordLabel.classList.add('text-light');
            passwordInput.classList.remove('text-dark', 'bg-white');
            passwordInput.classList.add('text-light', 'bg-dark');
            passwordInput.classList.add('dark-theme');
        }


        document.addEventListener('themeToggle', function (event) {
            const newTheme = event.detail.message;
            if (newTheme === 'theme-dark') {
                loginDiv.classList.remove('bg-white', 'text-dark');
                loginDiv.classList.add('bg-dark', 'text-light');
                emailLabel.classList.remove('text-dark');
                emailLabel.classList.add('text-light');
                emailInput.classList.remove('text-dark', 'bg-white');
                emailInput.classList.add('text-light', 'bg-dark');
                emailInput.classList.add('dark-theme');
                passwordLabel.classList.remove('text-dark');
                passwordLabel.classList.add('text-light');
                passwordInput.classList.remove('text-dark', 'bg-white');
                passwordInput.classList.add('text-light', 'bg-dark');
                passwordInput.classList.add('dark-theme');
            } else {
                loginDiv.classList.remove('bg-dark', 'text-light');
                loginDiv.classList.add('bg-white', 'text-dark');
                emailLabel.classList.remove('text-light');
                emailLabel.classList.add('text-dark');
                emailInput.classList.remove('text-light', 'bg-dark');
                emailInput.classList.add('text-dark', 'bg-white');
                emailInput.classList.remove('dark-theme');
                passwordLabel.classList.remove('text-light');
                passwordLabel.classList.add('text-dark');
                passwordInput.classList.remove('text-light', 'bg-dark');
                passwordInput.classList.add('text-dark', 'bg-white');
                passwordInput.classList.remove('dark-theme');
            }
        });

        document.getElementById('loginForm').addEventListener('submit', function (e) {
            const emailField = document.getElementById("emailInput");
            const passwordField = document.getElementById('passwordInput');
            if(passwordField.value == "" || emailField.value == "") {
                e.preventDefault();
                const modalBody = document.getElementById('modalBody');
                modalBody.textContent = "Username or Password has not been entered!";
                const alertModal = new bootstrap.Modal(document.getElementById('alertModal'));
                alertModal.show();
                return;
            }
            const hashedPasswordField = document.getElementById('HashedPassword');
            hashedPasswordField.value = CryptoJS.SHA256(passwordField.value).toString();
            passwordField.value = ''; // Clear the original password field
        });

        const alertMessage = '@TempData["AlertMessage"]';
        if (alertMessage) {
            const alertModal = new bootstrap.Modal(document.getElementById('alertModal'));
            alertModal.show();
        }
    </script>
}